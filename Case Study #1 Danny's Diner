/* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?/*
-- 2. How many days has each customer visited the restaurant?/*
-- 3. What was the first item from the menu purchased by each customer?/*
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?/*
-- 5. Which item was the most popular for each customer?/*
-- 6. Which item was purchased first by the customer after they became a member?/*
-- 7. Which item was purchased just before the customer became a member?/*
-- 8. What is the total items and amount spent for each member before they became a member?/*
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?/*
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?/*

-- Example Query:

/*
**1. What is the total amount each customer spent at the restaurant?**/*
SELECT
customer_id,
sum(price)
FROM sales s
inner join menu m on s.product_id = m.product_id
group by s.customer_id
  	
**2.How many days has each customer visited the restaurant?**/*
SELECT
customer_id,
count (order_date)
FROM sales
group by customer_id;

**3. What was the first item from the menu purchased by each customer?**/*
SELECT customer_id,
       first_purchased_item 
FROM (SELECT s.customer_id AS customer_id,
	   RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date ASC) AS purchase_order,
       m.product_name AS first_purchased_item 
FROM sales AS s 
INNER JOIN menu AS m 
ON s.product_id = m.product_id 
) t
WHERE purchase_order = 1;

**4.What is the most purchased item on the menu and how many times was it purchased by all customers?**
select m.product_name, count(s.product_id) as most_purchased
from sales s inner join menu m on s.product_id = m.product_id
group by m.product_name
order by most_purchased desc 
limit 1

**5. Which item was the most popular for each customer?**
select customer_id, product_name, most_favor from
(SELECT s.customer_id, 
       m.product_name,
       COUNT(s.product_id),
       rank() over ( partition by s.customer_id order by COUNT(s.product_id)desc) as most_favor
FROM dannys_diner.sales AS s 
LEFT JOIN dannys_diner.menu AS m
ON s.product_id = m.product_id 
GROUP BY 1,2
order by s.customer_id) t 
where most_favor = 1

**6.Which item was purchased first by the customer after they became a member?**
select customer_id, product_name from
(SELECT s.customer_id as customer_id,
       m.product_name as product_name,
	  s.order_date as order_date,
	  r.join_date as join_date,
	  rank() over (partition by s.customer_id order by order_date asc) as first_purchase_as_member
	  
FROM sales AS s 
INNER JOIN menu AS m 
ON s.product_id = m.product_id 
inner join members as r on r.customer_id = s.customer_id
where s.order_date >= r.join_date
order by s.customer_id) t
where first_purchase_as_member = 1

**7. Which item was purchased just before the customer became a member?**
select customer_id, product_name from
(SELECT s.customer_id as customer_id,
       m.product_name as product_name,
	  s.order_date as order_date,
	  r.join_date as join_date,
	  rank() over (partition by s.customer_id order by order_date desc) as first_purchase_as_member
	  
FROM sales AS s 
INNER JOIN menu AS m 
ON s.product_id = m.product_id 
inner join members as r on r.customer_id = s.customer_id
where s.order_date < r.join_date
order by s.customer_id) t
where first_purchase_as_member = 1

**8. What is the total items and amount spent for each member before they became a member?**
SELECT
  sales.customer_id,
  COUNT(DISTINCT menu.product_id) AS unique_menu_total_items,
  SUM(menu.price) AS amount
FROM
  dannys_diner.sales
  LEFT JOIN dannys_diner.members on sales.customer_id = members.customer_id
  INNER JOIN dannys_diner.menu ON sales.product_id = menu.product_id
WHERE
  order_date < join_date
GROUP BY
  sales.customer_id
ORDER BY
  sales.customer_id

  
**9. If each  spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?**
select s.customer_id, sum(
CASE 
	WHEN m.product_name = 'sushi' then 20 * price
	else 10 * price
end
) as total_points

from sales s inner join menu m on s.product_id = m.product_id
group by s.customer_id
order by s.customer_id

**10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?**

select s.customer_id, sum(
CASE 
	WHEN m.product_name = 'sushi' then 20 * price
	when s.order_date between t.join_date and t.join_date + 7 then 20*price
	else 10 * price
end
) as total_points

from members t left join sales s on t.customer_id = s.customer_id
inner join menu m on s.product_id = m.product_id
where s.order_date <= '2021-01-31'
group by s.customer_id
order by s.customer_id

**Bonus 1: 

select s.customer_id, s.order_date, m.product_name, m.price,
case 
	when t.join_date > s.order_date then 'N'
	when t.join_date >= s.order_date then 'Y'
	else 'N'
end as member
from sales as s left join menu m on s.product_id = m.product_id
left join members t on t.customer_id = s.customer_id
order by s.customer_id, s.order_date

**Bonus 2:

with summary as 
(
select s.customer_id, s.order_date, m.product_name, m.price,
case 
	when t.join_date > s.order_date then 'N'
	when t.join_date <= s.order_date then 'Y'
	else 'N'
end as member
from sales as s left join menu m on s.product_id = m.product_id
left join members t on t.customer_id = s.customer_id
order by s.customer_id, s.order_date
)
select *,
case
	when member = 'N' then NULL
	else rank() over (partition by customer_id, member order by order_date)
end as ranking
from summary
